//# Docker Params -------------------------------------------
//docker.enabled = true
//docker.runOptions = '-u \$(id -u):\$(id -g)'
//docker.sudo = false
//docker.temp = /tmp
//docker.remove = true
//docker.registry = ''
//docker.fixOwnership = true
//docker.engineOptions = ''
//docker.mountFlags = ''

//# Singularity Params --------------------------------------
//singularity.enabled = true
//singularity.autoMounts = true
//singularity.runOptions = ""
//process.stageInMode = "link"
//singularity.engineOptions = ''
//singularity.cacheDir = ''

//# AWS Batch Params ----------------------------------------
//process.executor = 'awsbatch'
//process.queue = ''
//aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
//aws.region = 'us-east-1'
//workDir = 's3://'

//# Google Cloud Params -------------------------------------
//process.executor = ''
//google.project = ''
//google.location = ''
//google.region = ''
//workDir = ''
//google.lifeSciences.bootDiskSize = 50.GB

//# Nextflow Tower ------------------------------------------
//tower.accessToken = ''
//tower.enabled = true

//# Adjustable Workflow parameters ---------------------------
//params.reads = 'reads'
//params.gff = 'gff'
//params.fastas = 'fastas'
//params.outdir = 'grandeur'

//# Basic CPU usage grouping
params.maxcpus = 8
params.medcpus = 4

//# for cg_pipeline processes
//params.cg_pipeline = true
//params.cg_pipeline_options = '--qual_offset 33 --minLength 1'
//# json with genome sizes
//params.genome_sizes = 'genome_sizes.json'

//# for blobtools processes
//params.blobtools = false
//params.blast_db = 'blast_db'
//params.local_db_type = 'nt'
//params.bwa_options = ''
//params.samtools_sort_options=''
//params.blobtools_create_options=''
//params.blobtools_view_options=''
//params.blobtools_plot_options = '--format png -r species'

//# for kraken2 process
//params.kraken2 = true
//params.kraken2_db = 'kraken2_db'
//params.kraken2_options = ''

//# for seqyclean process
//# contaminant file needs to be in the container
//params.seqyclean_contaminant_file = "/Adapters_plus_PhiX_174.fasta"
//params.seqyclean_options = '-minlen 25 -qual'

//# for spades process
//params.spades = true
//params.spades_options = '--isolate'

//# for fastqc process
//params.fastqc = true
//params.fastqc_options = ''

//# for mash processes
//params.mash = true
//params.mash_reference = '/db/RefSeqSketchesDefaults.msh'
//params.mash_options = '-v 0 -d 0.5'

//# for prokka process
//params.prokka = false
//params.prokka_options = '--mincontiglen 500 --compliant --locustag locus_tag'
//params.center = 'STAPHB'

//# for quast process
//params.quast = true
//params.quast_options = ''

//# for seqsero2 process
//params.seqsero2 = true
//params.seqsero2_options_fasta = '-t 4 -m k'
//# default is to use paired-end fastq reads
//params.seqsero2_options_fastq = '-t 2 -m a -b mem'

//# for sigatyper process
//params.shigatyper = true
//params.shigatyper_options = ''

//# for kleborate process
//params.kleborate = true
//params.kleborate_options = '-all'

//# for serotypefinder process
//params.serotypefinder = true
//params.serotypefinder_options = ''

//# for amrfinder plus process
//params.amrfinderplus = true
//params.amrfinderplus_options = ''

//# for mlst process
//params.mlst = true

//# for summary process
params.summary = true

//# for multiqc process
//params.multiqc_options = ''
//params.multiqc = true

//# for roary process
//params.roary = false

//# for iqtree2 process
//params.iqtree2 = true
//params.iqtree2_options = '-t RANDOM -m GTR+F+I -bb 1000 -alrt 1000'
//params.outgroup = ''

//# for snp-dists process
//params.snp_dists = true
//params.snp_dists_options = ''

//# Docker Images -------------------------------------------
seqyclean_container = 'staphb/seqyclean:latest'
spades_container = 'staphb/spades:latest'
fastqc_container = 'staphb/fastqc:latest'
mash_container = 'staphb/mash:latest'
prokka_container = 'staphb/prokka:latest'
quast_container = 'staphb/quast:latest'
lyveset_container = 'staphb/lyveset:latest'
seqsero2_container = 'staphb/seqsero2:latest'
shigatyper_container = 'andrewlangvt/shigatyper:1'
kleborate_container = 'staphb/kleborate:latest'
serotypefinder_container = 'staphb/serotypefinder:latest'
amrfinderplus_container = 'staphb/ncbi-amrfinderplus:latest'
kraken2_container = 'staphb/kraken2:latest'
blastn_container = 'ncbi/blast:latest'
bwa_container = 'staphb/bwa:latest'
samtools_container = 'staphb/samtools:latest'
blobtools_container = 'chrishah/blobtools:v1.1.1'
mlst_container = 'staphb/mlst:latest'
summary_container = 'staphb/parallel-perl:latest'
multiqc_container = 'ewels/multiqc:latest'
roary_container = 'staphb/roary:latest'
iqtree_container = 'staphb/iqtree2:latest'
snpdists_container = 'staphb/snp-dists:latest'

process {
  cpus = 2
  memory = '4 GB'

  withName:seqyclean{
    container = seqyclean_container
  }
  withName:spades{
    cpus = params.maxcpus
    container = spades_container
  }
  withName:fastqc{
    container = fastqc_container
  }
  withName:mash_dist{
    cpus = params.medcpus
    container = mash_container
  }
  withName:mash_sketch{
    container = mash_container
  }
  withName:prokka{
    cpus = params.maxcpus
    container = prokka_container
  }
  withName:quast{
    container = quast_container
  }
  withName:shuffle{
    container = lyveset_container
  }
  withName:cg_pipeline{
    cpus = params.medcpus
    container = lyveset_container
  }
  withName:seqsero2{
    cpus = params.medcpus
    container = seqsero2_container
  }
  withName:shigatyper{
    cpus = params.medcpus
    container = shigatyper_container
  }
  withName:kleborate{
    cpus = params.medcpus
    container = kleborate_container
  }
  withName:serotypefinder{
    cpus = params.medcpus
    container = serotypefinder_container
  }
  withName:amrfinderplus{
    cpus = params.medcpus
    container = amrfinderplus_container
  }
  withName:kraken2{
    cpus = params.maxcpus
    container = kraken2_container
  }
  withName:blastn{
    cpus = params.medcpus
    container = blastn_container
  }
  withName:bwa{
    cpus = params.medcpus
    container = bwa_container
  }
  withName:sort{
    cpus = params.medcpus
    container = samtools_container
  }
  withName:create{
    container = blobtools_container
  }
  withName:view{
    container = blobtools_container
  }
  withName:blobtools{
    container = blobtools_container
  }
  withName:mlst{
    container = mlst_container
  }
  withName:summary{
    container = summary_container
  }
  withName:multiqc{
    container = multiqc_container
  }
  withName:roary{
    cpus = params.maxcpus
    container = roary_container
  }
  withName:iqtree2{
    cpus = params.maxcpus
    container = iqtree_container
  }
  withName:snp_dists{
    container = snpdists_container
  }
}
